## 구글 소셜로그인 api
#spring.security.oauth2.client.registration.google.client-id=457169167339-g5m0kdbgmrrthjmno2f5mdk5dbr9rq5q.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=JOcGwSUGiIhVyxLXxaGLsotH
#spring.security.oauth2.client.registration.google.scope=profile,email
#
## 네이버 소셜로그인 api
## registration
#spring.security.oauth2.client.registration.naver.client-id=c7nSsjG4Kh_yFFPRu0g6
#spring.security.oauth2.client.registration.naver.client-secret=SPO2VbE86h
#spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
#spring.security.oauth2.client.registration.naver.client-name=Naver
#
## provider
#spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
#spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
#spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
#spring.security.oauth2.client.provider.naver.user-name-attribute=response
##user-name-attribute=response -> 기준이 되는 user_name의 이름을 네이버에선 response로 해야 함.
##                             -> 네이버의 회원 조회 시 반환되는 JSON 형태 때문
